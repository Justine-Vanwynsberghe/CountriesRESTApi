@page "/"
@inject IApiConnector<Country.Root> ApiConnector
@inherits Countries.StateManagement.ObservingComponent
@inject CssState CssState


<div class="main @CssState.DialogCssCLass">
    <div class="search-dropdown-container">
        <div class="search-container">
            <i class="fa-solid fa-magnifying-glass search-icon"></i>
            <input class="search-input" placeholder="Search for a country.." @bind="SearchText" @bind:event="oninput" />
        </div>


        <div class="dropdown-container">
            <select class="dropdown" @onchange="FilterCountriesByRegion">
                <option class="dropdown-option" value="" disabled selected hidden>Filter by region</option>
                <option class="dropdown-option" value="Africa"> Africa </option>
                <option class="dropdown-option" value="America"> America </option>
                <option class="dropdown-option" value="Asia"> Asia </option>
                <option class="dropdown-option" value="Europe"> Europe </option>
                <option class="dropdown-option" value="Oceania"> Oceania </option>
            </select>
        </div>
    </div>



    @if (_countries != null && FilteredCountries != null)
    {
        <div class="grid-container">

            @foreach (var country in FilteredCountries)
            {
                <a href="/countrydetail/@country?.name?.common">
                    <div class="card">
                        <img class="card-img" src="@country?.flags?.png" alt="austria small flag" />
                        <div class="card-country-info">
                            <h3 class="card-country-name">@country?.name?.common</h3>
                            <div class="info-container">
                                <p> Population: <span class="card-info-prc"> @country?.population </span></p>
                                <p>Region: <span class="card-info-prc">@country?.region </span></p>
                                @if (country?.capital is not null)
                                {
                                @foreach (var capital in country.capital)
                                {
                                <p>Capital: <span class="card-info-prc">@capital</span></p>
                                }
                                }
                            </div>
                        </div>
                    </div>
                </a>
            }
        </div>
    }
</div>



@code
{
    private IList<Country.Root>? _countries;
    private string? SearchText { get; set; } = "";

    protected override async Task OnInitializedAsync()
    {
        _countries = await ApiConnector.FindAsync("https://restcountries.com/v3.1/all");
        CssState.Subscribe(this);
    }


    IList<Country.Root>? FilteredCountries =>
        _countries?.Where(c => c.name?.official != null && c.name.official.ToLower().Contains(SearchText?.ToLower()!)).ToList();


    private async Task FilterCountriesByRegion(ChangeEventArgs e)
    {
        string? region = e.Value?.ToString();
        if (!string.IsNullOrEmpty(region))
        {
            _countries = await ApiConnector.FindAsync("https://restcountries.com/v3.1/all");
            _countries = _countries?.Where(c => c.region != null && c.region.Contains(region)).ToList();
            StateHasChanged();
        }

    }
}

