@page "/countrydetail/{Name}"
@inject IApiConnector<Country.Root> ApiConnector
@inherits Countries.StateManagement.ObservingComponent
@inject CssState CssState
@inject NavigationManager NavigationManager

<div class="main @CssState.DialogCssCLass">
    <div class="btn-back-container">
        <a href="/" class="btn-back">Back</a>
    </div>


    <section class="country-details">
        @if (Country != null)
        {

            <img class="card-img" src="@Country?.flags?.png" alt="flag from specific country" />


            <div class="details-info">
                <p class="details-info-title">@Country?.name?.official</p>
                <p>Native Name: @Country?.name?.common</p>
                <p>Population: @Country?.population</p>
                <p>Region: @Country?.region</p>
                <p>Sub Region: @Country?.subregion</p>
                <p>Capital: @Country?.capital?[0]</p>
                <br />
                <p>Top Level Domain: @Country?.tld?[0]</p>
                <br />
                <p>
                    Border countries:
                </p>

                @if (Country?.borders != null)
                {
                    <div class="border-container">
                        @if (Countries != null)
                        {
                            foreach (var country in Countries)
                            {
                                <a class="btn-border" @onclick="() => ChangeCountry(country?.name?.common!)">@country?.name?.common</a>
                            }
                        }
                    </div>


                }
                else
                {
                    <span> No borders</span>

                }


            </div>

        }
    </section>
</div>


@code {

    [Parameter]
    public string? Name { get; set; }

    private Country.Root? Country { get; set; } = new();


    private IList<Country.Root?>? Countries { get; set; } = new List<Country.Root?>();




    protected override async Task OnInitializedAsync()
    {
        Country = await ApiConnector.GetAsync($"https://restcountries.com/v3.1/name/{Name}");

        if (Country?.borders != null)
        {
            for (int i = 0; i < Country.borders.Count; i++)
            {

                string borderShort = Country.borders[i];
                Countries?.Add(await ApiConnector.GetAsync($"https://restcountries.com/v3.1/alpha/{borderShort}"));


            }
        }

        CssState.Subscribe(this);
    }


    private void ChangeCountry(string name)
    {
        NavigationManager.NavigateTo($"countrydetail/{name}", true);
    }

}
