@page "/countrydetail/{Name}"
@inject IApiConnector<Country.Root> ApiConnector
@inherits Countries.StateManagement.ObservingComponent
@inject CssState CssState

<div class="main @CssState.DialogCssCLass">
    <div class="btn-back-container">
        <a href="/" class="btn-back">Back</a>
    </div>


    <section class="country-details">
        @if (_country != null)
        {

        <img class="card-img" src="@_country.flags.png" alt="flag from specific country" />

        <p class="details-info-title">@_country.name.official</p>

        <div class="details-info">
            <p>Native Name: @_country.name.common</p>
            <p>Population: @_country.population</p>
            <p>Region: @_country.region</p>
            <p>Sub Region: @_country.subregion</p>
            <p>Capital: @_country.capital[0]</p>
            <br />
            <p>Top Level Domain: @_country.tld[0]</p>
            <p>Currencies: @_country.currencies</p>
            <p>Languages: @_country.languages.ara</p>
            <br />
            <p>Border countries: @_country.borders</p>

        </div>

        }
    </section>
</div>


@code {

    [Parameter]
    public string? Name { get; set; }

    private Country.Root? _country { get; set; } = new();


    protected override async Task OnInitializedAsync()
    {
        _country = await ApiConnector.GetAsync($"https://restcountries.com/v3.1/name/{Name}");

        CssState.Subscribe(this);
            
    }

}
